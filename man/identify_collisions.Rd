% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/collisions.R
\name{identify_collisions}
\alias{identify_collisions}
\title{Identify duplicated column names from a join}
\usage{
identify_collisions(x, pattern = "\\\\.[xy]$")
}
\arguments{
\item{x}{A data frame}

\item{pattern}{The pattern to determine collisions.}
}
\value{
A list of column names (without extension) that are duplicated.
}
\description{
Identifies column names that exist as ending in both \code{.x}
and \code{.y}, indicating that they had the same column name during a dplyr
join.
}
\details{
The purpose of this function is to identify column names that
have been joined from two tables, but have the same name. By default,
\code{\link[dplyr:mutate-joins]{dplyr::left_join()}} and the like will add a \code{.x} and \code{.y} to the
name. Often, I've had the problem that I cannot join by them (because
they are incomplete). So I'd rather clean them up after the join (using
meld). This function identifies the column names that need to be cleaned
up.
}
\examples{
\dontrun{
identify_collisions(data.frame(A.x=c(1,2,3), A.y=c(2,3,4)))
}
}
